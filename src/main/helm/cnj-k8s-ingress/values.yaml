# Default values for cnj-k8s-ingress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Default values for Traefik
traefik:
  image: traefik
  imageTag: 1.7.9

  testFramework:
    image: "dduportal/bats"
    tag: "0.4.0"

  serviceType: NodePort
  whiteListSourceRange: []
  externalTrafficPolicy: Cluster
  replicas: 1
  # startupArguments:
  #   - "--ping"
  #   - "--ping.entrypoint=http"

  podDisruptionBudget: {}
    # maxUnavailable: 1
  # minAvailable: 2

  # priorityClassName: ""

  # rootCAs: []

  resources: {}

  rbac:
    enabled: true

  debug:
    enabled: false

  deploymentStrategy: {}
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0
  # type: RollingUpdate

  securityContext: {}
  env: {}

  nodeSelector: {}
  # key: value
  affinity: {}
  # key: value
  tolerations: []
    # - key: "key"
    #   operator: "Equal|Exists"
    #   value: "value"
    #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
    ## Kubernetes ingress filters
    # kubernetes:
    # endpoint:
    # namespaces:
    # - default
    # labelSelector:
    # ingressClass:
    # ingressEndpoint:
    #   hostname: "localhost"
    #   ip: "127.0.0.1"
    #   publishedService: "namespace/servicename"
  #   useDefaultPublishedService: false
  proxyProtocol:
    enabled: false
    # trustedIPs is required when enabled
    trustedIPs: []
    # - 10.0.0.0/8
  forwardedHeaders:
    enabled: false
    # trustedIPs is required when enabled
    trustedIPs: []
    # - 10.0.0.0/8

  ## Add arbitrary ConfigMaps to deployment
  ## Will be mounted to /configs/, i.e. myconfig.json would
  ## be mounted to /configs/myconfig.json.
  configFiles: {}
    # myconfig.json: |
  #   filecontents...

  ## Add arbitrary Secrets to deployment
  ## Will be mounted to /secrets/, i.e. file.name would
  ## be mounted to /secrets/mysecret.txt.
  ## The contents will be base64 encoded when added
  secretFiles: {}
    # mysecret.txt: |
  #   filecontents...
  dashboard:
    enabled: true
    domain: "*"
    serviceType: ClusterIP
    service: {}
      # annotations:
    #   key: value
    ingress:
      annotations:
        traefik.frontend.rule.type: PathPrefixStrip
      path: "/traefik"

    auth: {}
      # basic:
    #   username: password
    statistics: {}
      ## Number of recent errors to show in the ‘Health’ tab
    # recentErrors:
  service:
    # annotations:
    #   key: value
    # labels:
    #   key: value
    ## Further config for service of type NodePort
    ## Default config with empty string "" will assign a dynamic
    ## nodePort to http and https ports
    port: 80
    nodePorts:
      http: "30080"
      https: "30443"
  gzip:
    enabled: true
  traefikLogFormat: json
  accessLogs:
    enabled: false
    ## Path to the access logs file. If not provided, Traefik defaults it to stdout.
    # filePath: ""
    format: common  # choices are: common, json
    ## for JSON logging, finer-grained control over what is logged. Fields can be
    ## retained or dropped, and request headers can be retained, dropped or redacted
    fields:
      # choices are keep, drop
      defaultMode: keep
      names: {}
      # ClientUsername: drop
      headers:
        # choices are keep, drop, redact
        defaultMode: keep
        names: {}
        # Authorization: redact
  deployment:
    # labels to add to the pod container metadata
    # podLabels:
    #   key: value
    # podAnnotations:
    #   key: value
    hostPort:
      httpEnabled: false
      httpsEnabled: false
      dashboardEnabled: false
      # httpPort: 80
      # httpsPort: 443
      # dashboardPort: 8080
  sendAnonymousUsage: false
  tracing:
    enabled: false
    serviceName: traefik
    # backend: choices are jaeger, zipkin, datadog
    # jaeger:
    #   localAgentHostPort: "127.0.0.1:6831"
    #   samplingServerURL: http://localhost:5778/sampling
    #   samplingType: const
    #   samplingParam: 1.0
    # zipkin:
    #   httpEndpoint: http://localhost:9411/api/v1/spans
    #   debug: false
    #   sameSpan: false
    #   id128bit: true
    # datadog:
    #   localAgentHostPort: "127.0.0.1:8126"
    #   debug: false
    #   globalTag: ""

  ## Create HorizontalPodAutoscaler object.
  ##
  # autoscaling:
  #   minReplicas: 1
  #   maxReplicas: 10
  #   metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       targetAverageUtilization: 60
  #   - type: Resource
  #     resource:
  #       name: memory
  #       targetAverageUtilization: 60

  ## Timeouts
  ##
  # timeouts:
  #   ## responding are timeouts for incoming requests to the Traefik instance
  #   responding:
  #     readTimeout: 0s
  #     writeTimeout: 0s
  #     idleTimeout: 180s
  #   ## forwarding are timeouts for requests forwarded to the backend servers
  #   forwarding:
  #     dialTimeout: 30s
  #     responseHeaderTimeout: 0s
  kubernetes:
    namespaces: ["sys-ingress", "sys-auth", "sys-logging", "sys-monitoring", "kube-system", "kube-public", "default", "int", "uat", "prod"]