keycloak:
  init:
    image:
      repository: alpine
      tag: 3.8
      pullPolicy: IfNotPresent

  clusterDomain: cluster.local

  keycloak:
    replicas: 1

    image:
      repository: jboss/keycloak
      tag: 4.8.3.Final
      pullPolicy: IfNotPresent
      pullSecrets: []
      # - myRegistrKeySecretName

    hostAliases: []

    securityContext:
      runAsUser: 1000
      fsGroup: 1000
      runAsNonRoot: true

    ## The path keycloak will be served from. To serve keycloak from the root path, use two quotes (e.g. "").
    basepath: auth

    ## Additional init containers, e. g. for providing custom themes
    extraInitContainers: |

    ## Additional sidecar containers, e. g. for a database proxy, such as Google's cloudsql-proxy
    extraContainers: |

    ## Custom script that is run before Keycloak is started.
    preStartScript:

    ## Additional arguments to start command e.g. -Dkeycloak.import= to load a realm
    extraArgs: ""

    ## Username for the initial Keycloak admin user
    username: keycloak

    ## Password for the initial Keycloak admin user
    ## If not set, a random 10 characters password will be used
    password: "fwpss2019"

    ## Allows the specification of additional environment variables for Keycloak
    extraEnv: |
      # - name: KEYCLOAK_LOGLEVEL
      #   value: DEBUG
      # - name: WILDFLY_LOGLEVEL
      #   value: DEBUG
      # - name: CACHE_OWNERS
      #   value: "2"
      # - name: DB_QUERY_TIMEOUT
      #   value: "60"
      # - name: DB_VALIDATE_ON_MATCH
      #   value: true
      # - name: DB_USE_CAST_FAIL
      #   value: false

    affinity: []

    nodeSelector: {}
    priorityClassName: ""
    tolerations: []

    ## Additional pod labels
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}

    ## Extra Annotations to be added to pod
    podAnnotations: {}

    livenessProbe:
      initialDelaySeconds: 120
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 30
      timeoutSeconds: 1

    resources: {}
      # limits:
      #   cpu: "100m"
      #   memory: "1024Mi"
      # requests:
      #   cpu: "100m"
    #   memory: "1024Mi"

    ## WildFly CLI configurations. They all end up in the file 'keycloak.cli' configured in the configmap which is
    ## executed on server startup.
    cli:
      nodeIdentifier: |
        {{ .Files.Get "scripts/node-identifier.cli" }}

      logging: |
        {{ .Files.Get "scripts/logging.cli" }}

      reverseProxy: |
        {{ .Files.Get "scripts/reverse-proxy.cli" }}

      ha: |
        {{ .Files.Get "scripts/ha.cli" }}

      datasource: |
        {{ .Files.Get "scripts/datasource.cli" }}

      # Custom CLI script
      custom: |

    ## Add additional volumes and mounts, e. g. for custom themes
    extraVolumes: |
    extraVolumeMounts: |

    ## Add additional ports, eg. for custom admin console
    extraPorts: |

    podDisruptionBudget: {}
      # maxUnavailable: 1
    # minAvailable: 1

    service:
      annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-internal: "0.0.0.0/0"

      labels: {}
      # key: value

      ## ServiceType
      ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
      type: ClusterIP

      ## Optional static port assignment for service type NodePort.
      # nodePort: 30000

      port: 80

      # Optional: jGroups port for high availability clustering
      jgroupsPort: 7600

    ## Ingress configuration.
    ## ref: https://kubernetes.io/docs/user-guide/ingress/
    ingress:
      enabled: true
      path: /auth

      annotations:
        traefik.frontend.rule.type: PathPrefix

      ## List of hosts for the ingress
      hosts: []

      ## TLS configuration
      tls: []
      # - hosts:
      #     - keycloak.example.com
      #   secretName: tls-keycloak

    ## Persistence configuration
    persistence:
      # If true, the Postgres chart is deployed
      deployPostgres: false

      # The database vendor. Can be either "postgres", "mysql", "mariadb", or "h2"
      dbVendor: h2

      ## The following values only apply if "deployPostgres" is set to "false"

      # Specifies an existing secret to be used for the database password
      existingSecret: ""

      # The key in the existing secret that stores the password
      existingSecretKey: password

      dbName: keycloak
      dbHost: mykeycloak
      dbPort: 5432
      dbUser: keycloak

      # Only used if no existing secret is specified. In this case a new secret is created
      dbPassword: "s3cr3t"

  postgresql:
    ### PostgreSQL User to create.
    ##
    postgresUser: keycloak

    ## PostgreSQL Password for the new user.
    ## If not set, a random 10 characters password will be used.
    ##
    postgresPassword: ""

    ## PostgreSQL Database to create.
    ##
    postgresDatabase: keycloak

    ## Persistent Volume Storage configuration.
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
    ##
    persistence:
      ## Enable PostgreSQL persistence using Persistent Volume Claims.
      ##
      enabled: false

  test:
    enabled: false
    image:
      repository: unguiculus/docker-python3-phantomjs-selenium
      tag: v1
      pullPolicy: IfNotPresent
